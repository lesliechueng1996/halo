// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// /// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
// model About {
//   id         Int       @id @default(autoincrement())
//   content    String?   @db.Text
//   createTime DateTime  @map("create_time") @db.Timestamp(6)
//   updateTime DateTime? @map("update_time") @db.Timestamp(6)

//   @@map("t_about")
// }

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Article {
  id             Int       @id @default(autoincrement())
  userId         Int       @map("user_id")
  categoryId     Int?      @map("category_id")
  articleCover   String?   @map("article_cover") @db.VarChar(1024)
  articleTitle   String    @map("article_title") @db.VarChar(50)
  articleContent String    @map("article_content") @db.Text
  isTop          Boolean   @default(false) @map("is_top")
  isFeatured     Boolean   @default(false) @map("is_featured")
  isDelete       Boolean   @default(false) @map("is_delete")
  status         Int   @default(1)
  type           Int   @default(1)
  password       String?   @db.VarChar(255)
  originalUrl    String?   @map("original_url") @db.VarChar(255)
  createTime     DateTime  @map("create_time") @db.Timestamp(6)
  updateTime     DateTime? @map("update_time") @db.Timestamp(6)

  @@map("t_article")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ArticleTag {
  id        Int @id @default(autoincrement())
  articleId Int @map("article_id")
  tagId     Int @map("tag_id")

  @@map("t_article_tag")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Category {
  id           Int       @id @default(autoincrement())
  categoryName String    @map("category_name") @db.VarChar(20)
  createTime   DateTime  @map("create_time") @db.Timestamp(6)
  updateTime   DateTime? @map("update_time") @db.Timestamp(6)

  @@map("t_category")
}

// /// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
// model Comment {
//   id             Int       @id @default(autoincrement())
//   userId         Int       @map("user_id")
//   topicId        Int?      @map("topic_id")
//   commentContent String    @map("comment_content") @db.Text
//   replyUserId    Int?      @map("reply_user_id")
//   parentId       Int?      @map("parent_id")
//   type           Int       @db.SmallInt
//   isDelete       Int       @default(0) @map("is_delete") @db.SmallInt
//   isReview       Boolean   @default(true) @map("is_review")
//   createTime     DateTime  @map("create_time") @db.Timestamp(6)
//   updateTime     DateTime? @map("update_time") @db.Timestamp(6)

//   @@index([parentId], map: "fk_comment_parent")
//   @@index([userId], map: "fk_comment_user")
//   @@map("t_comment")
// }

// /// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
// model ExceptionLog {
//   id            Int      @id @default(autoincrement())
//   optUri        String   @map("opt_uri") @db.VarChar(255)
//   optMethod     String   @map("opt_method") @db.VarChar(255)
//   requestMethod String?  @map("request_method") @db.VarChar(255)
//   requestParam  String?  @map("request_param") @db.VarChar(2000)
//   optDesc       String?  @map("opt_desc") @db.VarChar(255)
//   exceptionInfo String?  @map("exception_info") @db.Text
//   ipAddress     String?  @map("ip_address") @db.VarChar(255)
//   ipSource      String?  @map("ip_source") @db.VarChar(255)
//   createTime    DateTime @map("create_time") @db.Timestamp(6)

//   @@map("t_exception_log")
// }

// /// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
// model FriendLink {
//   id          Int       @id @default(autoincrement())
//   linkName    String    @map("link_name") @db.VarChar(20)
//   linkAvatar  String    @map("link_avatar") @db.VarChar(255)
//   linkAddress String    @map("link_address") @db.VarChar(50)
//   linkIntro   String    @map("link_intro") @db.VarChar(100)
//   createTime  DateTime  @map("create_time") @db.Timestamp(6)
//   updateTime  DateTime? @map("update_time") @db.Timestamp(6)

//   @@index([linkName], map: "fk_friend_link_user")
//   @@map("t_friend_link")
// }

// /// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
// model Job {
//   id             Int       @default(autoincrement())
//   jobName        String    @default("") @map("job_name") @db.VarChar(64)
//   jobGroup       String    @default("DEFAULT") @map("job_group") @db.VarChar(64)
//   invokeTarget   String    @map("invoke_target") @db.VarChar(500)
//   cronExpression String?   @default("") @map("cron_expression") @db.VarChar(255)
//   misfirePolicy  Int?      @default(3) @map("misfire_policy") @db.SmallInt
//   concurrent     Boolean?  @default(true)
//   status         Int?  @default(0)
//   createTime     DateTime  @map("create_time") @db.Timestamp(6)
//   updateTime     DateTime? @map("update_time") @db.Timestamp(6)
//   remark         String?   @default("") @db.VarChar(500)

//   @@id([id, jobName, jobGroup])
//   @@map("t_job")
// }

// /// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
// model JobLog {
//   id            Int       @id @default(autoincrement())
//   jobId         Int       @map("job_id")
//   jobName       String    @map("job_name") @db.VarChar(64)
//   jobGroup      String    @map("job_group") @db.VarChar(64)
//   invokeTarget  String    @map("invoke_target") @db.VarChar(500)
//   jobMessage    String?   @map("job_message") @db.VarChar(500)
//   status        Int?  @default(0)
//   exceptionInfo String?   @default("") @map("exception_info") @db.VarChar(2000)
//   startTime     DateTime? @map("start_time") @db.Timestamp(6)
//   endTime       DateTime? @map("end_time") @db.Timestamp(6)
//   createTime    DateTime? @map("create_time") @db.Timestamp(6)

//   @@map("t_job_log")
// }

// /// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
// model Menu {
//   id         Int       @id @default(autoincrement())
//   name       String    @db.VarChar(20)
//   path       String    @db.VarChar(50)
//   component  String    @db.VarChar(50)
//   icon       String    @db.VarChar(50)
//   createTime DateTime  @map("create_time") @db.Timestamp(6)
//   updateTime DateTime? @map("update_time") @db.Timestamp(6)
//   orderNum   Int   @map("order_num")
//   parentId   Int?      @map("parent_id")
//   isHidden   Int   @default(0) @map("is_hidden")

//   @@map("t_menu")
// }

// /// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
// model OperationLog {
//   id            Int       @id @default(autoincrement())
//   optModule     String    @map("opt_module") @db.VarChar(20)
//   optType       String    @map("opt_type") @db.VarChar(20)
//   optUri        String    @map("opt_uri") @db.VarChar(255)
//   optMethod     String    @map("opt_method") @db.VarChar(255)
//   optDesc       String    @map("opt_desc") @db.VarChar(255)
//   requestParam  String    @map("request_param") @db.Text
//   requestMethod String    @map("request_method") @db.VarChar(20)
//   responseData  String    @map("response_data") @db.Text
//   userId        Int       @map("user_id")
//   nickname      String    @db.VarChar(50)
//   ipAddress     String    @map("ip_address") @db.VarChar(255)
//   ipSource      String    @map("ip_source") @db.VarChar(255)
//   createTime    DateTime  @map("create_time") @db.Timestamp(6)
//   updateTime    DateTime? @map("update_time") @db.Timestamp(6)

//   @@map("t_operation_log")
// }

// /// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
// model Photo {
//   id         Int       @id @default(autoincrement())
//   albumId    Int       @map("album_id")
//   photoName  String    @map("photo_name") @db.VarChar(20)
//   photoDesc  String?   @map("photo_desc") @db.VarChar(50)
//   photoSrc   String    @map("photo_src") @db.VarChar(255)
//   isDelete   Boolean   @default(false) @map("is_delete")
//   createTime DateTime  @map("create_time") @db.Timestamp(6)
//   updateTime DateTime? @map("update_time") @db.Timestamp(6)

//   @@map("t_photo")
// }

// /// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
// model PhotoAlbum {
//   id         Int       @id @default(autoincrement())
//   albumName  String    @map("album_name") @db.VarChar(20)
//   albumDesc  String    @map("album_desc") @db.VarChar(50)
//   albumCover String    @map("album_cover") @db.VarChar(255)
//   isDelete   Boolean   @default(false) @map("is_delete")
//   status     Int   @default(1)
//   createTime DateTime  @map("create_time") @db.Timestamp(6)
//   updateTime DateTime? @map("update_time") @db.Timestamp(6)

//   @@map("t_photo_album")
// }

// /// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
// model Resource {
//   id            Int       @id @default(autoincrement())
//   resourceName  String    @map("resource_name") @db.VarChar(50)
//   url           String?   @db.VarChar(255)
//   requestMethod String?   @map("request_method") @db.VarChar(10)
//   parentId      Int?      @map("parent_id")
//   isAnonymous   Boolean   @default(false) @map("is_anonymous")
//   createTime    DateTime  @map("create_time") @db.Timestamp(6)
//   updateTime    DateTime? @map("update_time") @db.Timestamp(6)

//   @@map("t_resource")
// }

// /// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
// model Role {
//   id         Int       @id @default(autoincrement())
//   roleName   String    @map("role_name") @db.VarChar(20)
//   isDisable  Boolean   @default(false) @map("is_disable")
//   createTime DateTime  @map("create_time") @db.Timestamp(6)
//   updateTime DateTime? @map("update_time") @db.Timestamp(6)

//   @@map("t_role")
// }

// /// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
// model RoleMenu {
//   id     Int  @id @default(autoincrement())
//   roleId Int? @map("role_id")
//   menuId Int? @map("menu_id")

//   @@map("t_role_menu")
// }

// /// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
// model RoleResource {
//   id         Int  @id @default(autoincrement())
//   roleId     Int? @map("role_id")
//   resourceId Int? @map("resource_id")

//   @@map("t_role_resource")
// }

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Tag {
  id         Int       @id @default(autoincrement())
  tagName    String    @map("tag_name") @db.VarChar(20)
  createTime DateTime  @map("create_time") @db.Timestamp(6)
  updateTime DateTime? @map("update_time") @db.Timestamp(6)

  @@map("t_tag")
}

// /// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
// model Talk {
//   id         Int       @id @default(autoincrement())
//   userId     Int       @map("user_id")
//   content    String    @db.VarChar(2000)
//   images     String?   @db.VarChar(2500)
//   isTop      Boolean   @default(false) @map("is_top")
//   status     Int   @default(1)
//   createTime DateTime  @map("create_time") @db.Timestamp(6)
//   updateTime DateTime? @map("update_time") @db.Timestamp(6)

//   @@map("t_talk")
// }

// /// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
// model UniqueView {
//   id         Int       @id @default(autoincrement())
//   viewsCount Int       @map("views_count")
//   createTime DateTime  @map("create_time") @db.Timestamp(6)
//   updateTime DateTime? @map("update_time") @db.Timestamp(6)

//   @@map("t_unique_view")
// }

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model UserAuth {
  id            Int       @id @default(autoincrement())
  userInfoId    Int       @map("user_info_id")
  username      String    @unique(map: "username") @db.VarChar(50)
  password      String    @db.VarChar(100)
  loginType     Int       @map("login_type")
  ipAddress     String?   @map("ip_address") @db.VarChar(50)
  ipSource      String?   @map("ip_source") @db.VarChar(50)
  lastLoginTime DateTime? @map("last_login_time") @db.Timestamp(6)
  createTime    DateTime  @map("create_time") @db.Timestamp(6)
  updateTime    DateTime? @map("update_time") @db.Timestamp(6)

  @@map("t_user_auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model UserInfo {
  id          Int       @id @default(autoincrement())
  email       String?   @db.VarChar(50)
  nickname    String    @db.VarChar(50)
  avatar      String    @default("") @db.VarChar(1024)
  intro       String?   @db.VarChar(255)
  website     String?   @db.VarChar(255)
  isSubscribe Boolean?  @map("is_subscribe")
  isDisable   Boolean   @default(false) @map("is_disable")
  createTime  DateTime  @map("create_time") @db.Timestamp(6)
  updateTime  DateTime? @map("update_time") @db.Timestamp(6)

  @@map("t_user_info")
}

// /// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
// model UserRole {
//   id     Int  @id @default(autoincrement())
//   userId Int? @map("user_id")
//   roleId Int? @map("role_id")

//   @@map("t_user_role")
// }

// /// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
// model WebsiteConfig {
//   id         Int       @id @default(autoincrement())
//   config     String?   @db.VarChar(2000)
//   createTime DateTime  @map("create_time") @db.Timestamp(6)
//   updateTime DateTime? @map("update_time") @db.Timestamp(6)

//   @@map("t_website_config")
// }
